#!/usr/bin/env python
# -*- coding: utf-8 -*-

# import rlcompleter
# import readline

# # To allow tab completion
# readline.parse_and_bind("tab:  complete")

# # Include the following lines to enable peristent command history
# # # (saved to ~/.python_history)
# import os, atexit
# readline_history_file = os.path.join(os.path.expanduser('~'), '.python_history')
# try: 
#     readline.read_history_file(readline_history_file)
# except IOError: 
#     pass
# readline.set_history_length(3000)
# atexit.register(readline.write_history_file, readline_history_file)
import os
import sys
import atexit
import rlcompleter
import readline


HISTORY_FILE_PATH = os.path.expanduser('~/.python_history')

PYTHONPYCACHEPREFIX = os.path.expanduser('~/.local/pycache')

class IndentableCompleter(rlcompleter.Completer):
    def complete(self, text, state):
        if text == '' or text.isspace():
            return ['    ', None][state]
        else:
            return super().complete(text, state)


def save_history(history_file_path=HISTORY_FILE_PATH):
    import sys
    if sys.version_info.major > 2:
        import readline
        readline.write_history_file(history_file_path)


def load_history(history_file_path=HISTORY_FILE_PATH):
    if sys.version_info.major > 2 and os.path.exists(HISTORY_FILE_PATH):
        readline.read_history_file(HISTORY_FILE_PATH)

# sys.ps1 = "🐍 "
# sys.ps2 = "🐚 "

load_history()

readline.parse_and_bind('tab: complete')
readline.set_completer(IndentableCompleter().complete)

atexit.register(save_history)
del os, atexit, readline, rlcompleter, sys, save_history, load_history, HISTORY_FILE_PATH
