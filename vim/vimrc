"Begin section for pathogen setup
filetype off

call pathogen#infect()
execute pathogen#infect()
execute pathogen#helptags()

filetype plugin indent on
syntax on
"End section for pathogen ----

"some advice for organizing this file:
"  use sections:
"  - General System-wide
"  - Key-Mappings
"  - Script-specific settings -- ordered by script
"  - Playground for testing out new additions
"

"fix the tabbing
set ts=4 sts=4 sw=4 expandtab


"visual spelling prompting
highlight SpellBad term=standout cterm=bold ctermfg=203 ctermbg=0
highlight SpellLocal term=standout cterm=bold ctermfg=203 ctermbg=0
highlight SpellCap ctermfg=188 ctermbg=234
highlight SpellRare ctermfg=188 ctermbg=234

" Smart indenting
set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class

" set incremental search, start searching before enter is hit
set incsearch

" hi-light all matches when searching
set hlsearch

set history=100

" Show matching bracket for .5 second -- don't load the annoying, more
" permanent version
set showmatch
set matchtime=5
let loaded_matchparen=1

""" shortcuts
"use spell checking with english default
nmap <silent> <leader>s :set spell<CR>
nmap <silent> <leader>S :set spell!<CR>

"set paste
nmap <silent> <leader>p :set paste<CR>
nmap <silent> <leader>P :set nopaste<CR>

"turn line numbers on and off
nmap <silent> <leader>n :set nu<CR>
nmap <silent> <leader>N :set nu!<CR>

" copy and paste
nmap <silent> <leader>v "+p
nmap <silent> <leader>V "+P
vmap <leader>c "+y


set ruler

"set splitting
set splitbelow
set splitright

"use mouse to move the vim split windows; but I'll have to use shift-select to
"be able to copy from terminal
set mouse=a

" More syntax highlighting.
" but use only with .py files
autocmd BufRead,BufNewFile *.py let python_highlight_all=1

" Auto completion via ctrl-space (instead of the nasty ctrl-x ctrl-o)
"set omnifunc=pythoncomplete#Complete
"inoremap <Nul> <C-x><C-o>

"make . command work with visual mode
:xnoremap . :norm.<CR>

set nocompatible

"let @d=':r !date '+%a %d %B %Y''
map <leader>d :r !date '+\%a \%d \%B \%Y' <CR>

"db2commandline-ify a sql statement
" use ctrl-v<escape> to insert this special escape character
let @d='0idb2A;j'

map <leader>f 0idb2<ESC>A;<ESC>j

"This was recommended by Chad at NCLUG, but .. is this better than smartindent
"set autoindent 
"set expandtab 

"set so 07 increments like it's not in hex
"set nrformats=alpha

" combine lines with context-aware formatting
set formatoptions+=j

"expand all sections when opening python code
autocmd Syntax python normal zR

"wrap code lines..so you can see what's going on.
autocmd FileType python set nonumber wrap


"turn on only pylint via syntastic
"" I turned this off so I don't get so many msgs and conflicts with pymode
"let g:syntastic_python_checkers=['pylint']
let g:syntastic_javascript_checkers=['jshint']
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" setting this to zero because of conflicts with vimwiki's VWS, q.v. Issue
" #350
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0



"let g:pymode_lint_ignore = "E501,E2,W"
"remove warnings on line length
let g:pymode_lint_ignore = "E501"

" use PEP8 compatible python indent
let g:pymode_indent = 1
" stop the slow self. typing that seems to be happening
let g:pymode_rope_lookup_project = 0


" Turn off the highlighting of the max length column
let g:pymode_options_colorcolumn = 0

" Turn off the highlighting of the max length column
let g:pymode_options_max_line_length = 120

" Use folding (i.e. my files aren't that big)
let g:vimwiki_folding=1
"
" create a table to edit
map <Leader>T :VimwikiTable<CR>

"use solorized color scheme
"syntax enable
"set background=dark
"colorscheme solarized
colorscheme zenburn
"colorscheme ir_black
"colorscheme distinguished  "requires 256 terminal


" turn on paste, paste stuff from the system clipboard, turn off paste
"map <leader>W set paste; i<C-V>; set nopaste
"map <Leader>W :set paste<CR>o<esc>"*]p:set nopaste<cr>
map <Leader>W :set paste<CR>i<C-V><esc>:set nopaste<cr>

" Ctrl-P for directory navigation
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
" ignore these files as I'm probably not editing them
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

" remove markdown and text whitespace
autocmd BufWritePre *.md :%s/\s\+$//e
autocmd BufWritePre *.txt :%s/\s\+$//e


" UlitiSnips settings

let g:ultisnips_python_style="google"
let g:ultisnips_python_triple_quoting_style=1
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
"if you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
map <Leader>u :UltiSnipsEdit<cr>

" airline settings
"   show branch in version control system
let g:airline#extensions#branch#use_vcscommand = 1
let g:airline_powerline_fonts = 1
let g:AirlineTheme='simple'
